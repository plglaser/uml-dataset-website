[
  {
    "name": "AirTravel",
    "description": "The name, type, year of manufacture, and date of the next inspection are stored for aircraft. An aircraft performs several flights, the flight number and date of which are stored. \nSeveral passengers take part in a flight, and their names and passport numbers are stored. A passenger can take part in several flights. The (personalized) ticket for each flight is stored in the form of the ticket number and price. In addition, it is stored whether an upgrade is desired. \nPassenger aircraft are special aircraft used exclusively for the transport of passengers. The number of seats on these aircraft is also stored. \nA passenger aircraft can have several seat categories. The designation of each category is stored, whether or not it offers an entertainment program, and how many seats there are in this category. Each ticket is for a specific seat category.\nEach aircraft can be part of an airline, whose name is stored. \nAn airline employs several flight attendants and pilots. The name, date of employment, and whether the flight attendant is a chief steward or stewardess are stored for flight attendants. The name, date of employment, and license are stored for pilots.\nSeveral flight attendants work on a flight. One pilot flies the aircraft as the captain and one or two other pilots act as co-pilots.\nThe name, address, and number of runways are stored for airports. Each aircraft can have a home airport. Each flight has a departure airport and a destination airport.\n",
    "classCount": 12,
    "associationCount": 17,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": true,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": true,
    "language": "English",
    "tags": [],
    "domain": [
      "travel"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "BankAccount",
    "description": "The following description of a bank is given. Create a suitable class diagram from the given informal description.\nA bank manages any number of customers. The first name and last name of type String are stored for each customer. A bank consists of any number of branches. A customer has at least one and at most five accounts. Each account has an owner who is a customer of the bank. There are two basic types of accounts: Current accounts and savings accounts. Each account has an account number of type int and a current account balance of type double. Current accounts also have an overdraft limit of type double.\n",
    "classCount": 6,
    "associationCount": 5,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": true,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "domain": [
      "cinema planning and ticket sales"
    ],
    "source": "RWTH"
  },
  {
    "name": "Boeing",
    "description": "Boeing sells aircrafts to airline companies.  As aircrafts are very expensive to build, they are only built \"on demand\", meaning that first a sales agreement is made with a customer, before the airplane is actually built. (An exception are demo versions of airplanes, but these are out of scope for this case). The sales are regulated by means of contracts with the airline companies, whereby a single contract may consist of several acquisitions of airplanes. The global contract stipulates common elements across all acquisitions such as delivery conditions, legal aspects, etc. Each acquisition of an airplane has further specific details, such as the chosen model of airplane, the negotiated price for that airplane, chosen options & customizations, delivery date, etc. Each contract is managed by a Boeing salesperson. An employee can act as salesperson for several contracts. Given the long term of contracts, the assigned salesperson may change over time, but Boeing ensures there is always a salesperson available for the client. \r\nSome airlines are related to each other: for example, main airlines often have a low cost daughter airline company. Boeing therefore keep track as much as possible of the mother-daughter relationships between airline companies, to be able to track whether to sold aircrafts are shifted to partner airlines of the original buyer.\r\n",
    "classCount": 6,
    "associationCount": 6,
    "hasExtraMaterial": true,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": false,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "domain": [
      "Airplane Sales"
    ],
    "source": ""
  },
  {
    "name": "BuildingManagement",
    "description": "Project description:\nEach web portal has a version number and a URL address such as “http://www.ebuntu-nrw.org” and provides a catalog of buildings with their energy information. A building has a unique ID, a name, an energy class (A, B, C, D), an address, a year of construction and is assigned to a user as the owner, who can add additional entries to the buildings. Each additional entry has a name. An entry can be either textual information or a floating point number with an additional unit (the latter as freely definable text). The owner can optionally release each of these additional entries publicly, i.e. also for all non-registered visitors to the respective web portal. In addition, each building has a number of images, one of which is used as a profile photo. Images are saved with a file name.\nVisitors can register with a web portal as a user with a unique user name, their email address and a password. During registration, the system checks the user name for uniqueness and the correct email address by sending a confirmation link. In the meantime, the user is set up for the web portal by an administrator. Once these processes have been completed, users are automatically informed by email that they have been activated and can log in accordingly. After logging in, users can create buildings, manage entries for their buildings and comment on other users' buildings. All visitors to the site can search for corresponding buildings in the system using a full-text search. Administrators are special users. Their ID card number is stored in addition to their user information. The administrative functions include setting up user accounts and deleting comments. \n\nCreate a UML use case diagram based on the project description. Assign the use cases to the corresponding actors. For the evaluation of the task, 10 meaningful use cases are sufficient. Use the concepts of generalization and, if possible, model meaningful relationships between the individual use cases.\n",
    "classCount": 10,
    "associationCount": 11,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false
  },
  {
    "name": "CardGameApp",
    "description": "You are in the process of designing a card game app for German clubs. You are thinking about the data structure of the system in more detail. You have been given the following specification of the system by the customer:\nA game consists of 4 players, a deck of cards and a scoring table. A deck consists of up to 48 cards. Cards have a comparison method for card height, which can return lower, equal or higher. The suits of the cards are diamonds, hearts, spades and clubs.\nThe scoring table consists of any number of rounds, with each round containing the winning players and the point value. A round can be both a jack round and a solo round. In addition, mandatory solo rounds are a special case of solo rounds. Solo rounds have one type of solo, which can be a trump, jack or queen solo. In addition, solo rounds have exactly one solo player.\nEach object has a unique ID attribute, which ensures that it can be found.\n",
    "classCount": 10,
    "associationCount": 13,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": true,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": true,
    "hasAssociationClass": false
  },
  {
    "name": "ClothingCompany",
    "description": "Your company has been commissioned to develop an application for managing customers, products, orders, and similar items for a company that sells clothing. You are responsible for designing the application. The customer provides you with the following information:\r\n\"We offer all kinds of clothing—from shoes to headwear, we have everything in our range. Our products have a unique name, a description, and a net price. We also know which company manufactured each product and in which country. In order to calculate the gross price of an item, which depends on the local VAT rate in each country, we need information about the VAT rate, the currency used, and a conversion rate to the euro for each country. We also do not sell every product in every country – this should also be queryable in some way. Our products are distributed through representatives, whose first and last names, social security numbers, telephone numbers, and email addresses must be stored. Each representative is responsible for exactly one country. The customer data includes name, address, telephone number, email address, and the countries in which they resell our goods. Orders from customers are placed by the representatives. Each order is uniquely identifiable and refers to exactly one product. It must include the order quantity, the order date, and the desired delivery date.",
    "classCount": 7,
    "associationCount": 9,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": false,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": true,
    "language": "English",
    "tags": [],
    "domain": [
      "Sales"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "Cruise",
    "description": "A cruise is organized by a specific provider, each provider has a name and a location. A cruise is identified by a number and a name and has a start and end date. A cruise requires many employees, each of whom has a name and a social security number.\nSeveral guests take part in a cruise, each guest has a name and it is also noted whether they are a VIP or not. A guest can, of course, also take several cruises. \nThe name of each ship, the number of decks, the length of the ship, and the number of passengers are known. A ship can be used for different cruises.\nA cruise is booked through a travel agency. Each booking has a unique booking number and a booking date. A travel agency has a name and an address.\nA cruise always heads for a specific destination area, each destination area has a name, and the name of the sea is also noted. On a cruise, guests are offered several shows, each show has a title and a certain duration.\nA cruise has several guests, and each guest can participate in several cruises. Several tickets are issued for each cruise. A ticket belongs to exactly one cruise. A guest can have any number of tickets, but only one ticket per cruise.\n",
    "classCount": 9,
    "associationCount": 9,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": false,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "domain": [
      "travel"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "Ebike",
    "description": "Generate a class diagram of an EBike according to these specifications:\r\nThe EBike is composed of a frame (made out of steel), a drive system, and a controller.\r\nTwo wheels are inserted into each frame. The drive system is composed of a motor.\r\nEach EBike can be connected to a removable battery. The battery has a stored energy\r\nmeasured in Watt-hours (Wh). The controller can be in one of three states: On, Off, and\r\nCharging. It also controls the battery, if one is connected, and commands the drive\r\nsystem. The company plans two different variants of the controller, a basic controller,\r\nand an advanced controller. The advanced controller should be able to estimate the\r\nnext Date the bike should be inspected for maintenance.\r\n",
    "classCount": 9,
    "associationCount": 10,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": true,
    "hasAssociationClass": false
  },
  {
    "name": "FilmSet",
    "description": "Several employees work on a film set. The name and social security number of each employee is known. There are so-called creative employees, including directors and actors. The education completed by each actor is known, and the name of the director's assistant is stored. Both directors and actors can be Oscar winners, and it is stored whether the person in question has an Oscar. In addition, there are technicians, and the field of activity of each technician is known.\r\nThe film set is located at a specific location. A film set can be used for several films, and a film can be shot at several different film sets. Each film has a title and a year of release. Furthermore, each film is assigned to a specific genre, with a distinction being made between thriller, action, horror, or comedy.\r\nThe name and most successful film of a screenwriter are stored. A screenwriter creates several screenplays, and a screenplay comes from exactly one screenwriter. The title, version, date, number of scenes, and plot of each screenplay are known. A screenplay is based either on a novel or on a concept. Each novel has a title and an author. A film shot on a film set is based on a specific screenplay; a screenplay is written for exactly one film. The actors who appear in the film must prepare for their respective roles by reading the screenplay. The director of the film then implements the screenplay according to the specifications.",
    "classCount": 11,
    "associationCount": 14,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": true,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "domain": [
      "Film industry"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "GameArea",
    "description": "Formalize the following textual description of a game area by creating a suitable class diagram. Use at least one role name and at least one association name. (You do not need to model setters and getters).\nA game area has a name of type String. A game area consists of at least one game element and one or two game pieces. A game element has an x value of type protected long and a y value of type private long, which determine its position in the game area. Game elements are either shapes, objects or opponents. Shapes can be connected to any number of other shapes. Exactly one opponent is known to the game area as the so-called boss. Enemies have a number of lives of type protected int and can be killed. \n\nWrite down the classes game element, shape, object and opponent from their class diagram as well as their relationships in the textual syntax for class diagrams that you have become familiar with using the DEX tool. Ignore the visibilities.\n",
    "classCount": 6,
    "associationCount": 7,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": true,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": true,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [
      "game",
      "boardgame"
    ],
    "domain": [],
    "source": "RWTH SWTExamWS1415"
  },
  {
    "name": "GasStation",
    "description": "A gas station chain wants to manage its gas stations electronically in the future. Model the following situation using a UML class diagram based on the following information:\r\nEach gas station has a unique ID and an address. It also has a number of fuel pumps (maximum 12), each of which is identified by a number. It is also noted whether or not it is a self-service fuel pump. For each fuel pump, it is known which fuels are offered at it. A fuel is uniquely identified by its name, and its octane rating is also noted.\r\nEach gas station archives all daily fuel prices. A daily price is identified by a date, the fuel to which it applies, and the gas station. The price per liter is also noted. A fuel purchase is uniquely identified by an ID, and it is noted at which fuel pump the fuel was purchased and which fuel was purchased at which daily price. In addition, the number of liters of fuel dispensed is also stored.",
    "classCount": 5,
    "associationCount": 6,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": false,
    "hasInheritance": false,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "domain": [
      "Service provider"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "House",
    "description": "The address and building material (wood, brick, or concrete) of each house are stored. A house may have a basement, the size and name of which are stored. There are exactly two different types of basements: earth basements and concrete basements. The humidity level of earth basements is also stored. A special type of house is the semi-detached house. Additional information stored for this type of house includes whether it has its own garden and how many windows it has. Each semi-detached house has either two carports or a garage. For carports, information stored includes whether they are double carports and whether they have a flat roof; for garages, information stored includes whether they have an automatic garage door. Each house is serviced by several companies, whose names and addresses are stored. Whenever a company carries out a job in a house, the number of hours and the agreed price are recorded in a job log.",
    "classCount": 11,
    "associationCount": 10,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": true,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": true,
    "language": "English",
    "tags": [],
    "domain": [
      "Construction"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "Kinepolis",
    "description": "Kinepolis owns several cinemas in different towns.  Each cinema has several theatres in which several shows can be programmed per day.  Every cinema needs its own copy of the movie, and possibly more than one if a movie is to be played simultaneously in more than one theatre.  A copy will only be shown in the theatres of the premise where the copy is located. But copies of movies can be moved to another cinema if required by the programming.  \r\nEvery Sunday, the program for the next week is published (from Wednesday to Tuesday). Once a show has been published on the website, people can start making on-line reservations for that show. \r\nReservation can be made up to 1 hour before the starting time of the show and must be paid with a credit card.  A seat reservation can be cancelled by the customer up to 24h before the starting time of the show.  For that reason, credit cards are debited only after the cancellation period is terminated.\r\nA published show can be cancelled by Kinepolis as long as there are no seat reservations for that show.  If there are any, the reservations must be cancelled first.  When possible, a new seat is offered for a show for the same movie in another theatre.  The customer can accept or decline the offer.  The offer expires 24 hours before the start of the show. If the offer is declined, expired or no new seat reservation can be offered, the customer receives a free ticket send at home. \r\nPeople who did not make a seat reservation can buy a ticket at the entrance.  The tickets will also be assigned a seat number.  In contrast with on-line seat reservations, tickets issued at the entrance are anonymous and cannot be cancelled or refunded. At the ticketing desk a display shows how many seats are still available for that show (according to the number of seats in the theatre).\r\n",
    "classCount": 11,
    "associationCount": 15,
    "hasExtraMaterial": true,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": false,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": true,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "domain": [
      "cinema planning and ticket sales"
    ],
    "source": ""
  },
  {
    "name": "School",
    "description": "A school has a name. Teachers work there and students attend classes. Students and teachers have in common that their first and last names are recorded. Teachers' email addresses are also known. Students attend exactly one school, whereas a teacher can teach at a maximum of three schools. The number of hours for each such teaching relationship is known. Each school has exactly one principal, who is chosen from among the teachers. Although a teacher can teach at several schools, they can only be the principal of one school.\r\nIn addition to the people working at the school, it also consists of a large number of rooms. These can be classrooms with a name and capacity, or other rooms such as a gym, which also have a name and a size specification in square meters. Between 10 and 31 students form a class group, which has a name (e.g., 5a). A student is always in exactly one class group. A class group is assigned to exactly one classroom and vice versa.",
    "classCount": 9,
    "associationCount": 10,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": true,
    "hasInheritance": true,
    "hasAbstract": true,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": true,
    "language": "English",
    "tags": [],
    "domain": [
      "Education"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "Sightseeing",
    "description": "Every city has several attractions. A city has a name and a specific number of inhabitants, while an attraction has a name and an address. Various guided tours are offered for a tourist attraction, and the duration and number of a guided tour are known. A maximum of 20 visitors can take part in a guided tour, and certain visitors may be granted a discount for certain guided tours; the amount of this discount must be known. Of course, a guided tour also requires a guide. The visitors and the guide are people who have names.",
    "classCount": 7,
    "associationCount": 7,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": true,
    "language": "English",
    "tags": [],
    "domain": [
      "Tourism"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "TransportCompany",
    "description": "A transport company wants to modernize its operations and switch to a computerized solution. To this end, the structure and organization of the company were discussed in a meeting with the managing director. The following minutes are available to you: \r\nI currently employ around 60 drivers and 6-7 other employees (planners and administrative staff) in my company. I need to be able to store their names and social security numbers. Planners and administrative staff should be able to log into the system with a username and password. The administrative staff's field of activity is known. I also need to store my customers' details. The customer's name and billing address are important. In addition to customers and employees, I also want to manage my vehicles. I distinguish between different types of vehicles, such as refrigerated trucks, small vans, loading platforms, and box trucks. I want to store the license plate number and mileage for the vehicles. Of course, it can happen that a vehicle needs to be repaired or inspected. For this purpose, I want to store the repair shop (name and address are known), the employee who took the vehicle to the repair shop, and the duration and cost of the repair.\r\nOrders can be assigned to each driver. Usually, a customer calls and tells us when they need a transport vehicle and how big the package is. Based on this, the planner knows which type of vehicle is needed for the order. I always want to know which planner has assigned an order to a vehicle. It must also be possible to save a comment with additional information about the order, and I need to know when the driver starts and finishes the order. It is also important that I always know which driver has completed which order with which vehicle. For each order, there is always a customer who is the client, and both the pick-up and delivery addresses are known. The order can be placed directly with an administrative employee or with a partner company whose name and address are known.",
    "classCount": 11,
    "associationCount": 14,
    "hasExtraMaterial": false,
    "hasComposition": false,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": true,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "domain": [
      "Service Provider"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "TruckLogistics",
    "description": "Locations consist of drivers with first and last names and vehicles. Each location has its own address. There are three types of vehicles: trucks, cars and vans. Each vehicle has a vehicle number. While trucks also have a certain weight, passenger cars have a certain number of seats. In addition to vehicles and drivers, orders are also managed. Orders are carried out by drivers. Drivers carry out a maximum of one order assigned to them at any one time. Orders always have an origin and a destination location, at least one assigned driver and the date of execution. In addition to order management, the system also records which vehicles are driven by which driver. For this purpose, vehicles are assigned up to one driver who drives these vehicles.\n",
    "classCount": 7,
    "associationCount": 10,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false,
    "language": "English",
    "tags": [],
    "source": "RWTH SWTExamWS1213",
    "domain": [
      "logistics",
      "automotive"
    ]
  },
  {
    "name": "University",
    "description": "A university consists of several faculties, which are made up of various institutes. Each faculty and institute has a name. The address of each institute is known. \nEach faculty is headed by a dean, who is an employee of the university. \nThe total number of employees is known. Employees have a social security number, a name, and an email address. A distinction is made between research and administrative staff. \nResearch assistants (RA) are assigned to at least one institute. The field of research of each RA is known. In addition, RAs can be involved in projects for a certain number of hours, whereby the name, start and end dates of the projects are known. Some RAs teach courses. In this case, they are referred to as lecturers. \nCourses have a unique number (ID), a name and a weekly duration in hours.\n",
    "classCount": 9,
    "associationCount": 9,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": true,
    "hasInheritance": true,
    "hasAbstract": true,
    "hasEnumeration": false,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": true,
    "language": "English",
    "tags": [],
    "domain": [
      "university management"
    ],
    "source": "TU Wien, Business Informatics Group"
  },
  {
    "name": "eHome2020",
    "description": "As a project manager of a medium-sized software company you are responsible for the successful implementation of the system described below. In the first 5 tasks of this exam you will produce a specification step-by-step.\nShort description:\nInfrastructure and software platform for capturing energy consumption data in private homes.\nThe customer:\nHomeTec is a small company in the domain of building engineering which manufactures sensors which can be installed in private homes. The company is, same as your company, located in Aachen. \nDetailed system description:\nThe system “E-Home-2020” consists of a set of multiple sensors, which report their values to a connected SensorController. Furthermore, the SensorController stores information about the apartment with its inhabitants. The apartment’s inhabitants can log on to the SensorController by using their username and password and query values for each installed sensor. Moreover, they can specify a threshold for each sensor. An external System called „E-Monitor“  is attached to the system and checks all thresholds for each sensor automatically. If the sensor’s threshold is exceeded and if an email address has been specified for the apartment, “E-Monitor” will send alert messages via the “E-Home-2020” system. \nSome inhabitants have administrative rights which enable them to configure sensors. This includes assigning sensors to a new room or changing the sensor’s description.\nAt the moment, the company HomeTec manufactures two types of sensors: temperature sensors and power sensors (the latter are installed in a plug-and-play fashion between the power-socket and the respective appliance). Temperature sensors have a valid value range (min , max). Power sensors store the total power consumption as counter reading. All sensors have a unique vendor-id, a description (e.g. “temperature radiator living room” or “power consumption microwave oven”) and a unit. Possible units are CELSIUS and WATT. Each sensor is assigned to exactly one room. An apartment has an address and consists of at least two rooms. Rooms have a description (e.g. „living room“). For each sensor one can query the respective measured values, which are stored in the system. Each value has a timestamp and the corresponding value as a floating point number. For quick access one can access the last value of a sensor directly.\nGoal of project:\nThe goal of the project is the development of a prototype, which works on a specific target platform in a specific environment and provides essential functionality.\n",
    "classCount": 8,
    "associationCount": 10,
    "hasExtraMaterial": false,
    "hasComposition": true,
    "hasAggregation": false,
    "hasInheritance": true,
    "hasAbstract": false,
    "hasEnumeration": true,
    "hasAttributes": true,
    "hasMethods": false,
    "hasAssociationClass": false
  }
]